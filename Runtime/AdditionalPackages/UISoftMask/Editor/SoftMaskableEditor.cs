using System;
using UnityEditor;
using UnityEngine;

namespace Coffee.UISoftMask
{
    [CustomEditor(typeof(SoftMaskable), true)]
    [CanEditMultipleObjects]
    public class SoftMaskableEditor : AutoGeneratedEditor
    {
        private SerializedProperty _mask;
        private SerializedProperty _power;

        private void OnEnable()
        {
            _mask = serializedObject.FindProperty("m_Mask");
            _power = serializedObject.FindProperty("m_Power");
        }

        public override void OnInspectorGUI()
        {
            if (0 < (target.hideFlags & HideFlags.DontSave))
            {
                base.OnInspectorGUI();
            }

            serializedObject.Update();
            DrawProperty(_mask, x => x.SetMaterialDirty());
            DrawProperty(_power, x => x.SetMaterialDirty());
            serializedObject.ApplyModifiedProperties();

            if (targets.Length == 1 && target is SoftMaskable softMaskable)
            {
                var message = "This graphic will be not soft masked.";
                EditorGUILayout.HelpBox(message, MessageType.Warning);
            }
        }

        private void DrawProperty(SerializedProperty sp, Action<SoftMaskable> onChanged)
        {
            EditorGUI.BeginChangeCheck();
            EditorGUILayout.PropertyField(sp);
            if (!EditorGUI.EndChangeCheck()) return;

            foreach (var t in targets)
            {
                onChanged(t as SoftMaskable);
            }
        }
    }
}
